version: "3.5"

services:
  postgres:
    image: "postgres:latest"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    user: ${POSTGRES_USER}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ./.etc/postgres-data:/var/lib/postgresql
    restart: unless-stopped
    command: -p ${POSTGRES_PORT}
    healthcheck:
      test: ["CMD", "pg_isready", "-p", "${POSTGRES_PORT}"]
      interval: 5s
      timeout: 5s
      retries: 3

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - .etc/etcd:/etcd
    command: etcd -advertise-client-urls=http://172.17.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - .etc/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://172.17.0.1:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.3.3
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - .etc/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://172.17.0.1:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

  redis:
    image: redis:6.2-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - ./.etc/redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 3

  backend:
    build:
      context: ./backend
    environment:
      LOGURU_COLORIZE: "true"
    volumes:
      - ./.etc/llama_index/:/tmp/llama_index/
      - ./.etc/uploads/:/app/uploads/
    depends_on:
      redis:
        condition: service_healthy
      milvus:
        condition: service_healthy

  web:
    build:
      context: ./web
    ports:
      - "3000:3000"
    volumes:
      - ./.etc/uploads/:/app/uploads/
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "true"]
      interval: 5s
      timeout: 5s
      retries: 3

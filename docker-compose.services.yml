version: "3.5"

services:
  postgres:
    image: "postgres:latest"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    user: ${POSTGRES_USER}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ./.etc/postgres-data:/var/lib/postgresql
    restart: unless-stopped
    command: -p ${POSTGRES_PORT}
    healthcheck:
      test: ["CMD", "pg_isready", "-p", "${POSTGRES_PORT}"]
      interval: 5s
      timeout: 5s
      retries: 3

  minio:
    container_name: minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - .etc/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://172.17.0.1:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  redis:
    image: redis:6.2-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - ./.etc/redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 3

  qdrant:
    image: "qdrant/qdrant:latest"
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./.etc/qdrant_storage:/qdrant/storage:z
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "true"]
      interval: 5s
      timeout: 5s
      retries: 3
